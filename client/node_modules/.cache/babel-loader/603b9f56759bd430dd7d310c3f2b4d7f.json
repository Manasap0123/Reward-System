{"ast":null,"code":"var _jsxFileName = \"G:\\\\reward-system\\\\src\\\\Components\\\\CustomerList.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomerList() {\n  _s();\n\n  const [customers, setCustomers] = useState();\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(result => {\n      setCustomers(result.data);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomerList, \"awfBCeLgYaANKKPpSTnC0DHEvNw=\");\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["G:/reward-system/src/Components/CustomerList.jsx"],"names":["axios","useEffect","useState","CustomerList","customers","setCustomers","fetch","then","result","data","error","setIsLoaded","setError"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,YAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BH,QAAQ,EAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CAEKC,MAAD,IAAY;AACRH,MAAAA,YAAY,CAACG,MAAM,CAACC,IAAR,CAAZ;AACH,KAJL,EAKI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACTC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,MAAAA,QAAQ,CAACF,KAAD,CAAR;AACD,KAXL;AAaD,GAdM,EAcJ,EAdI,CAAT;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzBQP,Y;;KAAAA,Y;AA0BT,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction CustomerList(){ \r\n\r\n    const [customers,setCustomers] = useState();\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://api.example.com/items\")\r\n          .then(\r\n            (result) => {\r\n                setCustomers(result.data)\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n      }, [])\r\n    \r\n    return(\r\n        <div>\r\n    \r\n        </div>\r\n    );\r\n}\r\nexport default CustomerList;"]},"metadata":{},"sourceType":"module"}